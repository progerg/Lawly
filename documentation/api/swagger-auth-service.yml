components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    UserInfo:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 12345
        name:
          type: string
          example: "Иван Иванов"
        email:
          type: string
          format: email
          example: "ivan@example.com"
        created_at:
          type: string
          format: date-time
          example: "2023-01-15T12:00:00Z"
    
    Tariff:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 1
        name:
          type: string
          example: "Стандарт"
        description:
          type: string
          example: "Доступ к AI чату, неограниченная генерация документов"
        price:
          type: integer
          example: 299
        features:
          type: array
          items:
            type: string
          example: ["AI чат", "Неограниченная генерация документов", "Создание собственных шаблонов"]
    
    SubscriptionInfo:
      type: object
      properties:
        id:
          type: integer
          format: int32
          example: 123
        user_id:
          type: integer
          format: int64
          example: 12345
        tariff:
          $ref: '#/components/schemas/Tariff'
        start_date:
          type: string
          format: date-time
          example: "2023-01-15T12:00:00Z"
        end_date:
          type: string
          format: date-time
          example: "2023-02-15T12:00:00Z"
        days_left:
          type: integer
          example: 23
          description: Количество дней до окончания подписки
    
    Error:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        details:
          type: object

openapi: 3.0.0
info:
  title: Auth Service API
  description: API для аутентификации и авторизации пользователей
  version: 1.0.0
servers:
  - url: /api/v1/auth
    description: Auth Service API

paths:
  /register:
    post:
      summary: Регистрация нового пользователя
      description: Создание нового аккаунта пользователя в системе
      tags:
        - Авторизация
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - email
                - password
                - agreeToTerms
              properties:
                name:
                  type: string
                  example: "Иван Иванов"
                  description: Имя пользователя
                email:
                  type: string
                  format: email
                  example: "ivan@example.com"
                  description: Email пользователя (используется как логин)
                password:
                  type: string
                  format: password
                  example: "securePassword123"
                  description: Пароль пользователя
                agreeToTerms:
                  type: boolean
                  example: true
                  description: Согласие с условиями использования и политикой конфиденциальности
      responses:
        '201':
          description: Пользователь успешно зарегистрирован
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                    example: 12345
                  name:
                    type: string
                    example: "Иван Иванов"
                  email:
                    type: string
                    example: "ivan@example.com"
                  token:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                    description: JWT токен для аутентификации
        '400':
          description: Ошибка валидации данных
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Пользователь с таким email уже существует
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /login:
    post:
      summary: Вход в систему
      description: Аутентификация существующего пользователя
      tags:
        - Авторизация
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  example: "ivan@example.com"
                  description: Email пользователя
                password:
                  type: string
                  format: password
                  example: "securePassword123"
                  description: Пароль пользователя
      responses:
        '200':
          description: Успешная аутентификация
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                    description: JWT токен для аутентификации
                  user:
                    $ref: '#/components/schemas/UserInfo'
        '401':
          description: Неверные учетные данные
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /logout:
    post:
      summary: Выход из системы
      description: Завершение сессии пользователя (инвалидация токена)
      tags:
        - Авторизация
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Успешный выход из системы
        '401':
          description: Не авторизован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /user:
    get:
      summary: Получение информации о текущем пользователе
      description: Получение данных профиля авторизованного пользователя
      tags:
        - Пользователь
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Данные пользователя
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
        '401':
          description: Не авторизован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /user/subscription:
    get:
      summary: Получение информации о подписке пользователя
      description: Получение данных о текущей подписке и тарифном плане
      tags:
        - Пользователь
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Данные о подписке
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionInfo'
        '401':
          description: Не авторизован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Подписка не найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /subscribe/{tariff_id}:
    post:
      summary: Оформление подписки
      description: Активация выбранного тарифного плана для пользователя
      tags:
        - Подписки
      security:
        - bearerAuth: []
      parameters:
        - name: tariff_id
          in: path
          required: true
          description: ID тарифа
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Подписка успешно оформлена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionInfo'
        '400':
          description: Некорректный запрос
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Не авторизован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /tariffs:
    get:
      summary: Получение списка доступных тарифов
      description: Получение информации о всех доступных тарифных планах
      tags:
        - Подписки
      responses:
        '200':
          description: Список тарифов
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tariff'

  /privacy-policy:
    get:
      summary: Получение текста политики конфиденциальности
      description: Получение актуального текста политики конфиденциальности
      tags:
        - Документы
      responses:
        '200':
          description: Текст политики конфиденциальности
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: string
                    description: HTML-контент политики конфиденциальности